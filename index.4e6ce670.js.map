{"mappings":"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","sources":["src/index.js","src/js/main_page/media-width.js","src/js/main_page/functions.js","src/js/main_page/main_page.js","src/js/modal-auth/firebaseAuth.js","src/js/modal-auth/firebaseDatabase.js"],"sourcesContent":["import './js/preloader';\nimport './js/support-ukraine';\nimport './js/main_page/main_page';\nimport './js/toggle-color-theme';\nimport './js/refs';\nimport './js/modal-auth/modal-window-authFirebase';\nimport './js/modal-auth/firebaseAuth';\nimport './js/menu';\nimport './js/modal-auth/firebaseDatabase';\n","\n\n\n\nexport function addMediaWidth() { \n    const checkedWidts = document.documentElement.clientWidth\n    \n    if (checkedWidts < 767) {\n        \n        return \"mobile\"\n    } if (checkedWidts < 1439) { \n        return \"tablet\"\n    } if (checkedWidts >= 1440) { \n        return \"desctop\"\n    }\n}\n\n// addMediaWidth()\n\n\n// export default {addMediaWidth }","import { addMediaWidth } from \"./media-width\";\n\nexport async function murkupCategoryList(fetch) {\n  return await fetch.data.map(({ list_name }) => { return `<li class=\"category__home-itm\">${list_name}</li>` }).join('');\n}\n\nasync function sliceData(data) {\n\n  if (addMediaWidth() === \"mobile\") {\n    return makeListOfBooks(data.slice(0, 1))\n  } else if (addMediaWidth() === \"tablet\") {\n    return makeListOfBooks(await data.slice(0, 3))\n  } else {\n    return makeListOfBooks(data)\n  }\n}\n\nexport async function murkup(data) {\n\n  return await Promise.all(data.map(async ({ list_name, books }) => {\n    return ` \n    <div class=\"item-books__home\"> \n    <h3 class=\"js-book-categoty\">${list_name}</h3> \n    <ul class='list-books__home'>${await sliceData(books)}</ul> \n    <button class=\"button see-more\" data-js=\"${list_name}\">See more</button> \n    </div> \n    `;\n  }));\n}\n\n\nexport async function makeCategoryPage(category, data) {\n\n  const title = category.split(\" \");\n  return ` \n  <h2 class=\"block__books-title\">${title.splice(0, (title.length / 2)).join(' ')} <span class=\"block__books-colortitle\">${title.splice((title.length / 2), title.length).join(' ')}</span></h2> \n        <ul class=\"block__books-list\">${await makeListOfBooks(data)}</ul>\n        <button class=\"button all-categories__btn\" data-js=\"All Categories\">All Categories</button>`\n\n};\n\nexport async function makeListOfBooks(data) {\n\n  return data.map(({ author, book_image, title, description, _id }) => {\n    return `<li class=\"books__itm\">  \n    <div class=\"books__wrapper\" id=${_id} > \n    <img class=\"books__image\" src=\"${book_image}\"  alt=\"${description}\" loading=\"lazy\"  /> \n    <div class=\"books__overlay\"> \n    <p class=\"books__overlay-text\">QUICK VIEW</p> \n    </div> \n    </div> \n    <div class=\"books__info\">  \n    <p class=\"books__info-title\">${title}</p>  \n    <p class=\"books__info-author\">${author}</p>  \n    </div>  \n    </li>`\n  }\n  ).join('');\n};\n","import axios from \"axios\"\nimport { BooksAPI } from \"./fetch\";\nimport { makeCategoryPage } from \"./functions\";\nimport { murkupCategoryList } from \"./functions\";\nimport { murkup } from \"./functions\";\nimport { addMediaWidth } from \"./media-width\";\nimport {\n  startPreloader,\n  stopPreloader,\n  addMarkupOfPreloader,\n} from '../preloader';\nimport Notiflix from \"notiflix\";\n\n\n\n\nconst refBooks = document.querySelector('.block__books')\nconst refCategory = document.querySelector('.category__home')\nconst markupBook = document.querySelector('.block__category')\n\nconst bookCart = document.querySelector('.book-card__home')\n\nconst bookApi = new BooksAPI();\n\nonFirstload()\n\nasync function onFirstload() {\n  try {\n    const categoryApi = (await bookApi.getCategoryList());\n    refCategory.insertAdjacentHTML('beforeend', (await murkupCategoryList(categoryApi)));\n  } catch (error) {\n    Notiflix.Notify.failure(`Categories was not found : ${error.message}`);\n  }\n  try {\n    const resp = (await bookApi.getTopBooks());\n    refBooks.insertAdjacentHTML('afterbegin', '<h2 class=\"block__books-title\">Best Sellers<span class=\"block__books-colortitle\"> Books</span></h2>');\n    refBooks.insertAdjacentHTML('beforeend', (await murkup(resp.data)).join(\"\"));\n    return resp.data;\n  } catch (error) {\n    Notiflix.Notify.failure(`Books was not found : ${error.message}`);\n  }\n}\nrefCategory.addEventListener('click', onCategoryClick);\n\nasync function onCategoryClick(el) {\n  el.preventDefault();\n\n  if (el.target.classList.contains(\"category__home-itm\")) {\n    refBooks.innerHTML = \"\";\n    //Add and start preloader\n    refBooks.insertAdjacentHTML(\n      'afterbegin',\n      addMarkupOfPreloader()\n    );\n    startPreloader();\n    //-----------------------\n    if (el.target.innerText === `All categories`) {\n      try {\n        const resp = (await bookApi.getTopBooks());\n        refBooks.insertAdjacentHTML('afterbegin', '<h2 class=\"block__books-title\">Best Sellers<span class=\"block__books-colortitle\"> Books</span></h2>')\n        refBooks.insertAdjacentHTML('beforeend', (await murkup(resp.data)).join(\"\"));\n        stopPreloader();\n      } catch (error) {\n        Notiflix.Notify.failure(`Books was not found : ${error.message}`);\n      };\n      return;\n    } else {\n      try {\n        const data = await (await bookApi.getOneCategory(`${el.target.innerText}`)).data;\n        refBooks.insertAdjacentHTML('beforeend', await makeCategoryPage(`${el.target.innerText}`, data));\n        stopPreloader();\n      } catch (error) {\n        Notiflix.Notify.failure(`Books was not found : ${error.message}`);\n      };\n    }\n  };\n};\n\nrefBooks.addEventListener('click', onSeeMoreClick);\n\nasync function onSeeMoreClick(event) {\n  event.preventDefault();\n  if (event.target.classList.contains(\"see-more\")) {\n    const requestedCategory = event.target.dataset.js;\n    refBooks.innerHTML = '';\n    //Add and start preloader\n    refBooks.insertAdjacentHTML(\n      'afterbegin',\n      addMarkupOfPreloader()\n    );\n    startPreloader();\n    //------------------------\n    try {\n      const data = await (\n        await bookApi.getOneCategory(`${requestedCategory}`)\n      ).data;\n      refBooks.insertAdjacentHTML(\n        'beforeend',\n        await makeCategoryPage(`${requestedCategory}`, data)\n      );\n      stopPreloader();\n    } catch (error) {\n      Notiflix.Notify.failure(`Books was not found : ${error.message}`);\n    }\n\n  } else if (event.target.classList.contains(\"all-categories__btn\")) {\n    refBooks.innerHTML = '';\n    //Add and start preloader\n    refBooks.insertAdjacentHTML(\n      'afterbegin',\n      addMarkupOfPreloader()\n    );\n    startPreloader();\n    //------------------------\n    try {\n      const resp = (await bookApi.getTopBooks());\n      refBooks.insertAdjacentHTML('afterbegin', '<h2 class=\"block__books-title\">Best Sellers<span class=\"block__books-colortitle\"> Books</span></h2>');\n      refBooks.insertAdjacentHTML('beforeend', (await murkup(resp.data)).join(\"\"));\n      stopPreloader();\n    } catch (error) {\n      Notiflix.Notify.failure(`Books was not found : ${error.message}`);\n    }\n  }\n};\n\n\n\n\n\n\n","import { refs } from '../refs';\nimport { signUp, signIn, singOutFunction } from './firebaseFunction';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { ref } from 'firebase/database';\n\nconst auth = getAuth();\n\nrefs.submitBtn.addEventListener('click', (e) => {\n    e.preventDefault();\n\n    if (!refs.submitBtn.classList.contains('disabled')) {\n    refs.modalAuth.classList.add('is-hidden');\n  }\n\n    if (refs.submitBtn.textContent === 'Sign up') {\n    const { value : email } = document.getElementById('email');\n    const { value : password } = document.getElementById('password');\n    const { value: username } = document.getElementById('username');\n        \n    if (email !== '' && password !== '' && username !== '') {\n            signUp(email, password, username);\n        }\n    } else {\n    const { value : email } = document.getElementById('email');\n        const { value: password } = document.getElementById('password');\n        \n    if (email !== '' && password !== '') {\n            signIn(email, password);\n        }\n    \n  }\n\n})\n \n\nrefs.signOutBtn.addEventListener('click', (e) => {\n    e.preventDefault();\n\n    singOutFunction();\n\n} )\n\n\nonAuthStateChanged(auth, (user) => {\n    if (user) {\n        console.log('registrated');\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            const uid = user.uid;\n            // ...\n    } else {\n        console.log('not registrated');\n            // User is signed out\n            // ...\n        }\n});\n","import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, update, onValue } from 'firebase/database';\nimport { getAuth} from \"firebase/auth\";\n\n\n// Тест\nimport { books } from \"../backend-books\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAmjMPhgeiPnKuRTAY8vypkpT4j7HmPfug\",\n  authDomain: \"fu11stack-book-project.firebaseapp.com\",\n  databaseURL: \"https://fu11stack-book-project-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"fu11stack-book-project\",\n  storageBucket: \"fu11stack-book-project.appspot.com\",\n  messagingSenderId: \"110270361117\",\n  appId: \"1:110270361117:web:304c337163371a2e8920f4\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nexport const auth = getAuth();\nconst user = auth.currentUser;\n\n\n// Читання даних\nconst btnRead = document.querySelector('.btn_read');\nbtnRead.addEventListener('click', readShoppingList);\n\n\n    function readShoppingList() {\n    const userId = auth.currentUser.uid;\n    const shoppingListEl = ref(database, '/users' + userId);\n    onValue(shoppingListEl, (snapshot) => {\n        const data = snapshot.val();\n        alert(data.shoppingList);\n        console.log(data.shoppingList);\n    });\n}\n\nconst testBtnEl = document.querySelector('.test-button')\nconsole.log(testBtnEl)\n\n\n// Оновлення даних (якщо такого поля в базі ще не було, поле створюється і записує потрібні дані)\nconst btnUpDate = document.querySelector('.btn_update');\nbtnUpDate.addEventListener('click', updateShoppingList)\n\nfunction updateShoppingList() {\n    const userId = auth.currentUser.uid; \n    const email = ref(database, '/users' + userId);\n    \n    update((email), {\n        shoppingList: books\n    })\n         .then(() => {\n            // Data saved successfully!\n            alert('data updated');\n        })\n            .catch((error) => {\n                // The write failed...\n                alert(error);\n            });\n\n}\n\n\n\n"],"names":["parcelRequire","$b2af5dae5cbe50e6$export$a09a7dc423207a75","checkedWidts","document","documentElement","clientWidth","async","$d5714379388b7225$export$af76976bfd573c60","fetch","data","map","list_name","join","$d5714379388b7225$export$10f346b5617a8f5c","Promise","all","books","$d5714379388b7225$export$21c7b1be35f5970e","slice","$d5714379388b7225$var$sliceData","$d5714379388b7225$export$ef55d93817bcd964","category","title","split","splice","length","author","book_image","description","_id","$abb99e6ee51b8bc8$var$refBooks","querySelector","$abb99e6ee51b8bc8$var$refCategory","$abb99e6ee51b8bc8$var$bookApi","$bqQ6g","BooksAPI","categoryApi","getCategoryList","insertAdjacentHTML","error","$parcel$interopDefault","$7Y9D8","Notify","failure","message","resp","getTopBooks","error1","$abb99e6ee51b8bc8$var$onFirstload","addEventListener","el","preventDefault","target","classList","contains","innerHTML","$ioBS9","addMarkupOfPreloader","startPreloader","innerText","stopPreloader","getOneCategory","event","requestedCategory","dataset","js","$krGWQ","$3d91796057bbea27$var$auth","$eyjy7","getAuth","refs","submitBtn","e","modalAuth","add","textContent","value","email","getElementById","password","username","$8mXNj","signUp","signIn","signOutBtn","singOutFunction","onAuthStateChanged","user","console","log","uid","$gKkQl","$3885623dd0e494b8$var$app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","$3885623dd0e494b8$var$database","$jAzyG","getDatabase","$3885623dd0e494b8$export$73693bad9f5880b0","currentUser","userId","shoppingListEl","ref","onValue","snapshot","val","alert","shoppingList","$3885623dd0e494b8$var$testBtnEl","update","$eolzN","then","catch"],"version":3,"file":"index.4e6ce670.js.map"}